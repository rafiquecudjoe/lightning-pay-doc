"use strict";(self.webpackChunkapi_doc=self.webpackChunkapi_doc||[]).push([[257],{1962:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>d,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"errors","title":"Error Handling","description":"Our API uses conventional HTTP response codes to indicate the success or failure of requests.","source":"@site/docs/errors.md","sourceDirName":".","slug":"/errors","permalink":"/docs/errors","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"errors","title":"Error Handling","sidebar_label":"Errors"},"sidebar":"docs","previous":{"title":"Authentication","permalink":"/docs/authentication"},"next":{"title":"Webhooks","permalink":"/docs/webhook"}}');var o=n(4848),t=n(8453);const d={id:"errors",title:"Error Handling",sidebar_label:"Errors"},i="Error Handling",c={},l=[{value:"HTTP Status Codes",id:"http-status-codes",level:2},{value:"Error Response Format",id:"error-response-format",level:2},{value:"Common Error Codes",id:"common-error-codes",level:2},{value:"Handling Errors",id:"handling-errors",level:2}];function a(e){const r={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.header,{children:(0,o.jsx)(r.h1,{id:"error-handling",children:"Error Handling"})}),"\n",(0,o.jsx)(r.p,{children:"Our API uses conventional HTTP response codes to indicate the success or failure of requests."}),"\n",(0,o.jsx)(r.h2,{id:"http-status-codes",children:"HTTP Status Codes"}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.code,{children:"200 OK"})," - The request was successful"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.code,{children:"201 Created"})," - The request was successful and a resource was created"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.code,{children:"400 Bad Request"})," - The request was malformed or contains invalid parameters"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.code,{children:"401 Unauthorized"})," - Authentication failed or user doesn't have permissions"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.code,{children:"404 Not Found"})," - The requested resource doesn't exist"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.code,{children:"429 Too Many Requests"})," - Rate limit exceeded"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.code,{children:"500 Internal Server Error"})," - Something went wrong on our end"]}),"\n"]}),"\n",(0,o.jsx)(r.h2,{id:"error-response-format",children:"Error Response Format"}),"\n",(0,o.jsx)(r.p,{children:"All error responses include a JSON object with the following structure:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-json",children:'{\n  "code": 404,\n  "message": "The requested resource was not found"\n}\n'})}),"\n",(0,o.jsx)(r.h2,{id:"common-error-codes",children:"Common Error Codes"}),"\n",(0,o.jsx)(r.p,{children:"Here are some common error codes you might encounter:"}),"\n",(0,o.jsxs)(r.table,{children:[(0,o.jsx)(r.thead,{children:(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.th,{children:"Code"}),(0,o.jsx)(r.th,{children:"Description"})]})}),(0,o.jsxs)(r.tbody,{children:[(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:"1001"}),(0,o.jsx)(r.td,{children:"Invalid API key"})]}),(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:"1002"}),(0,o.jsx)(r.td,{children:"Expired API key"})]}),(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:"2001"}),(0,o.jsx)(r.td,{children:"Resource not found"})]}),(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:"3001"}),(0,o.jsx)(r.td,{children:"Rate limit exceeded"})]}),(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:"4001"}),(0,o.jsx)(r.td,{children:"Invalid parameters"})]}),(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:"5001"}),(0,o.jsx)(r.td,{children:"Internal server error"})]})]})]}),"\n",(0,o.jsx)(r.h2,{id:"handling-errors",children:"Handling Errors"}),"\n",(0,o.jsx)(r.p,{children:"Always check the HTTP status code and error message to understand what went wrong. Here's an example of handling errors in JavaScript:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-javascript",children:"fetch('https://api.example.com/v1/users')\n  .then(response => {\n    if (!response.ok) {\n      return response.json().then(err => {\n        throw new Error(`${err.message} (Code: ${err.code})`);\n      });\n    }\n    return response.json();\n  })\n  .then(data => console.log(data))\n  .catch(error => console.error('Error:', error));\n"})})]})}function h(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>d,x:()=>i});var s=n(6540);const o={},t=s.createContext(o);function d(e){const r=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:d(e.components),s.createElement(t.Provider,{value:r},e.children)}}}]);